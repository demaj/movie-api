version: '3.9'

services:
  web:
    container_name: movie-web
    build:
      context: .
    entrypoint: bash
    command: >
      -c "cd /code/app && python -m gunicorn config.wsgi:application --bind 0.0.0.0:8080 --reload"
    volumes:
      - ./app:/code/app
      - ./data:/code/data
    env_file:
      - ./.envs/.production/app.secrets.env
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - postgres_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8080/healthcheck/"]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    container_name: movie-db
    image: postgres:15.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.envs/.production/app.secrets.env
    ports:
      - "5432:5432"
    networks:
      - postgres_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  postgres_network:
    driver: bridge

volumes:
  postgres_data:
